{"version":3,"sources":["listener.js"],"names":["define","types","objects","arrays","klass","events","Event","Array","prototype","slice","compact","isUndefined","isDefined","isBoolean","isPlainObject","isFunction","isString","isEmptyObject","Listener","mixin","safeMixin","listenTo","obj","event","selector","callback","one","name","callbacks","match","name1","selector1","this","listening","emitter","ensureListenedEmitter","listeningTo","on","_listeningTo","i","length","push","listeningEvents","listeningEvent","indexOf","listenToOnce","unlistenTo","eventName","j","off"],"mappings":"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","file":"../listener.js","sourcesContent":["define([\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-klass\",\r\n  \"./events\",\r\n  \"./event\"\r\n],function(types,objects,arrays,klass,events,Event){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isUndefined = types.isUndefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isBoolean = types.isBoolean,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin;\r\n\r\n\r\n    var Listener = klass({\r\n\r\n        listenTo: function(obj, event, selector,callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            if (types.isPlainObject(event)){\r\n                //listenTo(obj,callbacks,one)\r\n                if (types.isBoolean(selector)) {\r\n                    one = selector;\r\n                    selector = null;\r\n                } else if (types.isBoolean(callback)) {\r\n                    one = callback;\r\n                }\r\n                var callbacks = event;\r\n                for (var name in callbacks) {\r\n\r\n                    var match = name.match( /^([\\w:-]*)\\s*(.*)$/ );\r\n                    var name1 = match[ 1 ];\r\n                    var selector1 = match[ 2 ] || selector;\r\n\r\n                    if (selector1) {\r\n                        this.listenTo(obj,name1,selector1,callbacks[name],one);\r\n                    } else {\r\n                        this.listenTo(obj,name1,callbacks[name],one);\r\n                    }\r\n\r\n                }\r\n                return this;\r\n            }\r\n\r\n            if (isBoolean(callback)) {\r\n                one = callback;\r\n                callback = selector;\r\n                selector = null;\r\n            } else if (isBoolean(selector)) {\r\n                one = selector;\r\n                callback = selector = null;\r\n            } else if (isUndefined(callback)){\r\n                one = false;\r\n                callback = selector;\r\n                selector = null;\r\n            }\r\n\r\n\r\n\r\n            if (!callback) {\r\n                callback = \"handleEvent\";\r\n            }\r\n            \r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            var emitter = this.ensureListenedEmitter(obj)\r\n\r\n            if (one) {\r\n                if (selector) {\r\n                    emitter.one(event, selector,callback, this);\r\n                } else {\r\n                    emitter.one(event, callback, this);\r\n                }\r\n            } else {\r\n                 if (selector) {\r\n                    emitter.on(event, selector, callback, this);\r\n                } else {\r\n                    emitter.on(event, callback, this);\r\n                }\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event,selector, callback) {\r\n            return this.listenTo(obj, event,selector, callback, 1);\r\n        },\r\n\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    if (!listeningEvent) { \r\n                        continue;\r\n                    }\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            let emitter = this.ensureListenedEmitter(listening.obj);\r\n                            emitter.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        ensureListenedEmitter : function(obj) {\r\n            return obj;\r\n        }\r\n    });\r\n\r\n    return events.Listener = Listener;\r\n\r\n})"]}