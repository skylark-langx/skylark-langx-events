{"version":3,"sources":["optioned-emitter.js"],"names":["define","objects","Emitter","events","OptionedEmitter","inherit","klassName","_construct","options","this","_initOptions","ctor","constructor","cache","hasOwnProperty","defaults","ctors","unshift","superclass","Object","getPrototypeOf","i","length","prototype","mixin","defineProperty","value","option","key","parts","curOption","arguments","split","shift","pop","undefined","_setOptions","_setOption"],"mappings":";;;;;;;AAAAA,OAAO,CACH,wBACA,+BACA,YACD,SACCC,EACAC,EACAC,GAEA,aAWA,IAAIC,EAAoBF,EAAQG,QAAQ,CACpCC,UAAW,kBAEXC,WAAa,SAASC,GACnBC,KAAKC,aAAaF,CAAO,CAC5B,EAEAE,aAAe,SAASF,GACtB,IAjBeG,EAiBXA,EAAOF,KAAKG,YACZC,EAAQF,EAAKE,MAASF,EAAKG,eAAe,OAAO,EAAIH,EAAKE,MAAQ,GAEtE,GAAI,EAACE,EADUF,EAAME,UACN,CACb,IAAKC,EAAQ,GACb,EAAG,CAED,GADAA,EAAMC,QAAQN,CAAI,EACdA,IAASP,EACX,MAEFO,GA3BWA,EA2BQA,GA1BhBG,eAAe,YAAY,EACzBH,EAAKO,WAGTC,OAAOC,eAAeT,CAAI,CAuB7B,OAASA,GAGT,IAAK,IADLI,EAAWF,EAAME,SAAW,GACnBM,EAAE,EAAEA,EAAEL,EAAMM,OAAOD,CAAC,IAC3BV,EAAOK,EAAMK,IACJE,UAAUT,eAAe,SAAS,GACzCb,EAAQuB,MAAMT,EAASJ,EAAKY,UAAUf,QAAQ,CAAA,CAAI,EAEhDG,EAAKG,eAAe,SAAS,GAC/Bb,EAAQuB,MAAMT,EAASJ,EAAKH,QAAQ,CAAA,CAAI,CAG9C,CAMA,OALAW,OAAOM,eAAehB,KAAK,UAAU,CACnCiB,MAAOzB,EAAQuB,MAAM,GAAGT,EAASP,EAAQ,CAAA,CAAI,CAC/C,CAAC,EAGMC,KAAKD,OACd,EAGAmB,OAAQ,SAAUC,EAAKF,GACnB,IACIG,EACAC,EACAT,EAHAb,EAAUoB,EAKd,GAA0B,IAArBG,UAAUT,OAGX,OAAOrB,EAAQuB,MAAO,GAAIf,KAAKD,OAAQ,EAG3C,GAAoB,UAAf,OAAOoB,EAMR,GAHApB,EAAU,GAEVoB,GADAC,EAAQD,EAAII,MAAO,GAAI,GACXC,MAAM,EACbJ,EAAMP,OAAS,CAEhB,IADAQ,EAAYtB,EAASoB,GAAQ3B,EAAQuB,MAAO,GAAIf,KAAKD,QAASoB,EAAM,EAC9DP,EAAI,EAAGA,EAAIQ,EAAMP,OAAS,EAAGD,CAAC,GAChCS,EAAWD,EAAOR,IAAQS,EAAWD,EAAOR,KAAS,GACrDS,EAAYA,EAAWD,EAAOR,IAGlC,GADAO,EAAMC,EAAMK,IAAI,EACU,IAArBH,UAAUT,OACX,OAA4Ba,KAAAA,IAArBL,EAAWF,GAAsB,KAAOE,EAAWF,GAE9DE,EAAWF,GAAQF,CACvB,KAAO,CACH,GAA0B,IAArBK,UAAUT,OACX,OAA+Ba,KAAAA,IAAxB1B,KAAKD,QAASoB,GAAsB,KAAOnB,KAAKD,QAASoB,GAEpEpB,EAASoB,GAAQF,CACrB,CAKJ,OAFAjB,KAAK2B,YAAa5B,CAAQ,EAEnBC,IACX,EAEA2B,YAAa,SAAU5B,GAGnB,IAFA,IAAIoB,KAESpB,EACTC,KAAK4B,WAAYT,EAAKpB,EAASoB,EAAM,EAGzC,OAAOnB,IACX,EAEA4B,WAAY,SAAUT,EAAKF,GAIvB,OAFAjB,KAAKD,QAASoB,GAAQF,EAEfjB,IACX,CACJ,CAAC,EAGD,OAAQN,EAAOC,gBAAkBA,CACrC,CAAC","file":"../optioned-emitter.js","sourcesContent":["define([\r\n    \"skylark-langx-objects\",\r\n    \"skylark-langx-events/Emitter\",\r\n    \"./events\"\r\n], function(\r\n    objects,\r\n    Emitter, \r\n    events\r\n) {\r\n    \"use strict\";\r\n\r\n    function parentClass(ctor){\r\n        if (ctor.hasOwnProperty(\"superclass\")) {\r\n            return ctor.superclass;\r\n        }\r\n\r\n        return Object.getPrototypeOf(ctor);\r\n    }\r\n\r\n \r\n    var OptionedEmitter =   Emitter.inherit({\r\n        klassName: \"OptionedEmitter\",\r\n\r\n        _construct : function(options) {\r\n           this._initOptions(options);\r\n        },\r\n\r\n        _initOptions : function(options) {\r\n          var ctor = this.constructor,\r\n              cache = ctor.cache = (ctor.hasOwnProperty(\"cache\") ? ctor.cache : {}),\r\n              defaults = cache.defaults;\r\n          if (!defaults) {\r\n            var  ctors = [];\r\n            do {\r\n              ctors.unshift(ctor);\r\n              if (ctor === OptionedEmitter) {\r\n                break;\r\n              }\r\n              ctor = parentClass(ctor);\r\n            } while (ctor);\r\n\r\n            defaults = cache.defaults = {};\r\n            for (var i=0;i<ctors.length;i++) {\r\n              ctor = ctors[i];\r\n              if (ctor.prototype.hasOwnProperty(\"options\")) {\r\n                objects.mixin(defaults,ctor.prototype.options,true);\r\n              }\r\n              if (ctor.hasOwnProperty(\"options\")) {\r\n                objects.mixin(defaults,ctor.options,true);\r\n              }\r\n            }\r\n          }\r\n          Object.defineProperty(this,\"options\",{\r\n            value :objects.mixin({},defaults,options,true)\r\n          });\r\n\r\n          //return this.options = langx.mixin({},defaults,options);\r\n          return this.options;\r\n        },\r\n\r\n\r\n        option: function( key, value ) {\r\n            var options = key;\r\n            var parts;\r\n            var curOption;\r\n            var i;\r\n\r\n            if ( arguments.length === 0 ) {\r\n\r\n                // Don't return a reference to the internal hash\r\n                return objects.mixin( {}, this.options );\r\n            }\r\n\r\n            if ( typeof key === \"string\" ) {\r\n\r\n                // Handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\r\n                options = {};\r\n                parts = key.split( \".\" );\r\n                key = parts.shift();\r\n                if ( parts.length ) {\r\n                    curOption = options[ key ] = objects.mixin( {}, this.options[ key ] );\r\n                    for ( i = 0; i < parts.length - 1; i++ ) {\r\n                        curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\r\n                        curOption = curOption[ parts[ i ] ];\r\n                    }\r\n                    key = parts.pop();\r\n                    if ( arguments.length === 1 ) {\r\n                        return curOption[ key ] === undefined ? null : curOption[ key ];\r\n                    }\r\n                    curOption[ key ] = value;\r\n                } else {\r\n                    if ( arguments.length === 1 ) {\r\n                        return this.options[ key ] === undefined ? null : this.options[ key ];\r\n                    }\r\n                    options[ key ] = value;\r\n                }\r\n            }\r\n\r\n            this._setOptions( options );\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOptions: function( options ) {\r\n            var key;\r\n\r\n            for ( key in options ) {\r\n                this._setOption( key, options[ key ] );\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        _setOption: function( key, value ) {\r\n\r\n            this.options[ key ] = value;\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n\r\n    return  events.OptionedEmitter = OptionedEmitter;\r\n});"]}