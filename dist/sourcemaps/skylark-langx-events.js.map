{"version":3,"sources":["skylark-langx-events.js"],"names":["define","skylark","attach","objects","funcs","klass","events","eventMethods","preventDefault","stopImmediatePropagation","stopPropagation","compatible","event","source","isDefaultPrevented","each","name","predicate","sourceMethod","this","returnTrue","apply","arguments","returnFalse","Event","CustomEvent","[object Object]","type","props","super","safeMixin","types","arrays","Array","prototype","slice","compact","isUndefined","isDefined","isBoolean","isPlainObject","isFunction","isString","isEmptyObject","Listener","mixin","listenTo","obj","selector","callback","one","callbacks","on","listening","listeningTo","_listeningTo","i","length","push","listeningEvents","listeningEvent","indexOf","listenToOnce","unlistenTo","eventName","j","off","parse","segs","split","ns","join","queues","Map","Emitter","inherit","_prepareArgs","e","args","concat","data","ctx","self","_hub","fn","undefined","Error","forEach","parsed","emit","Object","defineProperty","value","call","listeners","len","reCompact","isImmediatePropagationStopped","listener","startsWith","queueEmit","map","get","set","oldTimeout","delete","window","clearTimeout","timeout","setTimeout","size","trigger","listened","evtArr","_events","evts","liveEvents","_","queueTrigger","createEvent","main"],"mappings":"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","file":"../skylark-langx-events.js","sourcesContent":["define('skylark-langx-events/events',[\r\n\t\"skylark-langx-ns\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"langx.events\",{});\r\n});\ndefine('skylark-langx-events/Event',[\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-funcs\",\r\n  \"skylark-langx-klass\",\r\n  \"skylark-langx-hoster\",\r\n    \"./events\"\r\n],function(objects,funcs,klass,events){\r\n    var eventMethods = {\r\n        preventDefault: \"isDefaultPrevented\",\r\n        stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n        stopPropagation: \"isPropagationStopped\"\r\n     };\r\n        \r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            objects.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = funcs.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = funcs.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n\r\n    /*\r\n    var Event = klass({\r\n        _construct : function(type,props) {\r\n            CustomEvent.call(this,type.props);\r\n            objects.safeMixin(this, props);\r\n            compatible(this);\r\n        }\r\n    },CustomEvent);\r\n    */\r\n\r\n    class Event extends CustomEvent {\r\n        constructor(type,props) {\r\n            super(type,props);\r\n            objects.safeMixin(this, props);\r\n            compatible(this);\r\n        } \r\n    }\r\n\r\n\r\n    Event.compatible = compatible;\r\n\r\n    return events.Event = Event;\r\n    \r\n});\ndefine('skylark-langx-events/Listener',[\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-klass\",\r\n  \"./events\",\r\n  \"./Event\"\r\n],function(types,objects,arrays,klass,events,Event){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isUndefined = types.isUndefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isBoolean = types.isBoolean,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin;\r\n\r\n\r\n    var Listener = klass({\r\n\r\n        listenTo: function(obj, event, selector,callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            if (isBoolean(callback)) {\r\n                one = callback;\r\n                callback = selector;\r\n                selector = null;\r\n            } else if (isBoolean(selector)) {\r\n                one = selector;\r\n                callback = selector = null;\r\n            } else if (isUndefined(callback)){\r\n                one = false;\r\n                callback = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (types.isPlainObject(event)){\r\n                //listenTo(obj,callbacks,one)\r\n                var callbacks = event;\r\n                for (var name in callbacks) {\r\n                    this.listenTo(obj,name,callbacks[name],one);\r\n                }\r\n                return this;\r\n            }\r\n\r\n            if (!callback) {\r\n                callback = \"handleEvent\";\r\n            }\r\n            \r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                if (selector) {\r\n                    obj.one(event, selector,callback, this);\r\n                } else {\r\n                    obj.one(event, callback, this);\r\n                }\r\n            } else {\r\n                 if (selector) {\r\n                    obj.on(event, selector, callback, this);\r\n                } else {\r\n                    obj.on(event, callback, this);\r\n                }\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event,selector, callback) {\r\n            return this.listenTo(obj, event,selector, callback, 1);\r\n        },\r\n\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    if (!listeningEvent) { \r\n                        continue;\r\n                    }\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    return events.Listener = Listener;\r\n\r\n});\ndefine('skylark-langx-events/Emitter',[\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-klass\",\r\n  \"./events\",\r\n  \"./Event\",\r\n  \"./Listener\"\r\n],function(types,objects,arrays,klass,events,Event,Listener){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin;\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            name: segs[0],\r\n            ns: segs.slice(1).join(\" \")\r\n        };\r\n    }\r\n\r\n    \r\n    var queues  = new Map();\r\n\r\n\r\n    var Emitter = Listener.inherit({\r\n        _prepareArgs : function(e,args) {\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            return args;\r\n        },\r\n\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (!callback ) {\r\n                throw new Error(\"No callback function\");\r\n            } else if (!isFunction(callback)) {\r\n                throw new Error(\"The callback  is not afunction\");\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    ns : ns,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        emit: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new Event(e); //new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n\r\n            args = this._prepareArgs(e,args);\r\n\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var parsed = parse(eventName),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var listeners = self._hub[name];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                        return this;\r\n                    }\r\n                    var listener = listeners[i];\r\n                    if (ns && (!listener.ns ||  !listener.ns.startsWith(ns))) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (listener.data) {\r\n                        e.data = mixin({}, listener.data, e.data);\r\n                    }\r\n                    if (args.length == 2 && isPlainObject(args[1])) {\r\n                        e.data = e.data || {};\r\n                        mixin(e.data,args[1]);\r\n                    }\r\n\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        queueEmit : function (event) {\r\n            const type = event.type || event;\r\n            let map = queues.get(this);\r\n            if (!map) {\r\n                map = new Map();\r\n                queues.set(this, map);\r\n            }\r\n            const oldTimeout = map.get(type);\r\n            map.delete(type);\r\n            window.clearTimeout(oldTimeout);\r\n            const timeout = window.setTimeout(() => {\r\n                if (map.size === 0) {\r\n                    map = null;\r\n                    queues.delete(this);\r\n                }\r\n                this.trigger(event);\r\n            }, 0);\r\n            map.set(type, timeout);\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            if (!events) {\r\n              this._hub = null;\r\n              return;\r\n            }\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var evts = _hub[name];\r\n\r\n                if (evts) {\r\n                    var liveEvents = [];\r\n\r\n                    if (callback || ns) {\r\n                        for (var i = 0, len = evts.length; i < len; i++) {\r\n                            \r\n                            if (callback && evts[i].fn !== callback && evts[i].fn._ !== callback) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            } \r\n\r\n                            if (ns && (!evts[i].ns || evts[i].ns.indexOf(ns)!=0)) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (liveEvents.length) {\r\n                        _hub[name] = liveEvents;\r\n                    } else {\r\n                        delete _hub[name];\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        trigger  : function() {\r\n            return this.emit.apply(this,arguments);\r\n        },\r\n\r\n        queueTrigger : function (event) {\r\n            return this.queueEmit.apply(this,arguments);\r\n        }\r\n\r\n    });\r\n\r\n\r\n    return events.Emitter = Emitter;\r\n\r\n});\ndefine('skylark-langx-events/createEvent',[\r\n\t\"./events\",\r\n\t\"./Event\"\r\n],function(events,Event){\r\n    function createEvent(type,props) {\r\n        //var e = new CustomEvent(type,props);\r\n        //return safeMixin(e, props);\r\n        return new Event(type,props);\r\n    };\r\n\r\n    return events.createEvent = createEvent;\t\r\n});\ndefine('skylark-langx-events/main',[\r\n\t\"./events\",\r\n\t\"./Event\",\r\n\t\"./Listener\",\r\n\t\"./Emitter\",\r\n\t\"./createEvent\"\r\n],function(events){\r\n\treturn events;\r\n});\ndefine('skylark-langx-events', ['skylark-langx-events/main'], function (main) { return main; });\n\n"]}